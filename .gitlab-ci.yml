image: docker:24.0  # Usar uma imagem Docker oficial

services:
  - docker:dind  # Serviço Docker-in-Docker

stages:
  - build
  - deploy

variables:
  AWS_ACCOUNT_ID: "881490100310"
  AWS_DEFAULT_REGION: "us-east-1"           # Região da AWS
  APP_NAME: "app-eks-app"                   # Nome da aplicação
  ECR_REPO: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"  # Repositório ECR
  IMAGE_TAG: "latest"                       # Tag da imagem Docker
  CLUSTER_NAME: "app-eks-cluster"           # Nome do cluster EKS
  DOCKER_HOST: tcp://docker:2375            # Configurar o Docker para usar o serviço DinD
  DOCKER_TLS_CERTDIR: ""                    # Desabilitar TLS para simplificar
  EFS_SERVER: fs-0257e5cb4edb85a43.efs.us-east-1.amazonaws.com
  SECRET_NAME: s3-credentials-3

before_script:
  # Instalar dependências básicas
  - apk add --no-cache curl git unzip python3 py3-pip

  # Criar e ativar um ambiente virtual Python
  - python3 -m venv /opt/venv
  - source /opt/venv/bin/activate

  # Instalar AWS CLI no ambiente virtual
  - pip install --upgrade awscli
  - aws --version

  # Instalar kubectl
  - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  - install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  - kubectl version --client

  # Autenticar na AWS
  - aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
  - aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
  - aws configure set region ${AWS_DEFAULT_REGION}

build:
  stage: build
  script:
    - echo "Construindo a imagem Docker..."
    - docker build -t ${APP_NAME}:${IMAGE_TAG} .
    - echo "Autenticando no ECR..."
    - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ECR_REPO}
    - echo "Taggeando a imagem..."
    - docker tag ${APP_NAME}:${IMAGE_TAG} ${ECR_REPO}/${APP_NAME}:${IMAGE_TAG}
    - echo "Enviando a imagem para o ECR..."
    - docker push ${ECR_REPO}/${APP_NAME}:${IMAGE_TAG}
  when: manual
  only:
    - main

deploy:
  stage: deploy
  script:
    - echo "Configurando o acesso ao cluster EKS..."
    - aws eks update-kubeconfig --name ${CLUSTER_NAME} --region ${AWS_DEFAULT_REGION}
    - echo "Implantando a aplicação no Kubernetes..."
    #- kubectl delete deployment app-eks -n app
    - kubectl apply -f k8s/app/1-pv.yaml
    - kubectl apply -f k8s/app/2-pvc.yaml
    - kubectl apply -f k8s/app/3-deployment.yaml
  when: manual
  only:
    - main