apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-eks
  namespace: app
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::881490100310:role/eso-service-account-role
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: aws-secrets-global
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets
            namespace: default
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: api-token
  namespace: app
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secrets-global
    kind: ClusterSecretStore
  target:
    name: api-token
    creationPolicy: Owner
    template:
      type: Opaque
  data:
    - secretKey: aws-access-key-id
      remoteRef:
        key: s3-credentials
        property: AWS_ACCESS_KEY_ID
    - secretKey: aws-secret-access-key
      remoteRef:
        key: s3-credentials
        property: AWS_SECRET_ACCESS_KEY
    - secretKey: aws-default-region
      remoteRef:
        key: s3-credentials
        property: AWS_DEFAULT_REGION
    - secretKey: s3-bucket-name
      remoteRef:
        key: s3-credentials
        property: S3_BUCKET_NAME
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-eks
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-eks
  template:
    metadata:
      labels:
        app: app-eks
    spec:
      serviceAccountName: app-eks
      containers:
      - name: app-eks
        image: 881490100310.dkr.ecr.us-east-1.amazonaws.com/app-eks-app:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: efs-storage
          mountPath: /var/log/apache2
          subPath: app
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: api-token
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: api-token
              key: aws-secret-access-key
        - name: AWS_DEFAULT_REGION
          valueFrom:
            secretKeyRef:
              name: api-token
              key: aws-default-region
        - name: S3_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              name: api-token
              key: s3-bucket-name
      volumes:
      - name: efs-storage
        persistentVolumeClaim:
          claimName: efs-pvc
      imagePullSecrets:
      - name: ecr-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: app-eks
  namespace: app
spec:
  selector:
    app: app-eks
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jornada-ingress
  namespace: app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /app1(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: app-eks
            port:
              number: 80