name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t app-eks-app:${IMAGE_TAG} .
          docker tag app-eks-app:${IMAGE_TAG} ${ECR_REGISTRY}/app-eks-app:${IMAGE_TAG}
          docker push ${ECR_REGISTRY}/app-eks-app:${IMAGE_TAG}
          echo "image=${ECR_REGISTRY}/app-eks-app:${IMAGE_TAG}" >> $GITHUB_OUTPUT

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0' # доставить свою версию

      - name: Update kubeconfig for EKS cluster
        run: |
          aws eks update-kubeconfig --name app-eks-cluster --region us-east-1
      
      - name: Deploy to Kubernetes
        env:
          SECRET_NAME: s3-credentials
          IMAGE: ${{ needs.build.outputs.image }}
          EFS_SERVER: fs-00749eb8bd6c95cae.efs.us-east-1.amazonaws.com
        run: |
          export IMAGE="${{ steps.build-image.outputs.image }}"
          envsubst < k8s/app/1-pv.yaml | kubectl apply -f -
          envsubst < k8s/app/2-pvc.yaml | kubectl apply -f -
          envsubst < k8s/app/3-deployment.yaml | kubectl apply -f -
